# PostgreSQL 环境配置模板
# 用于在 Go 1.19+ 环境中启用 PostgreSQL 支持
# 复制此文件为 .env 并修改相应值

# 服务器配置
SIAPP_ADDR=:8080

# PostgreSQL 数据库配置
SIAPP_DATABASE_TYPE=postgres
SIAPP_DB_HOST=localhost
SIAPP_DB_PORT=5432
SIAPP_DB_USER=siapp
SIAPP_DB_PASSWORD=your-postgres-password-change-me
SIAPP_DB_NAME=siapp
SIAPP_DB_SSLMODE=require

# JWT配置
JWT_SECRET_KEY=your-secure-jwt-secret-key-change-this
JWT_TOKEN_DURATION=24h

# CORS配置
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# 邮件配置 (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM=noreply@example.com

# 日志级别
LOG_LEVEL=info

# 系统配置
APP_NAME=社保数据整合系统
APP_VERSION=1.0.0
APP_ENV=development

# 前端地址配置
NEXT_PUBLIC_API_BASE_URL_DOMAIN=http://localhost:8081/api
NEXT_PUBLIC_API_BASE_URL_IP=http://127.0.0.1:8081/api
NEXT_PUBLIC_API_BASE_URL=http://localhost:8081/api
INTERNAL_API_BASE_URL=http://backend:8080/api

# Docker Compose 专用变量
# 用于 docker-compose.postgres.yml
POSTGRES_PASSWORD=your-postgres-password-change-me
JWT_SECRET=your-secure-jwt-secret-key-change-this

# 提示信息:
# 1. 系统需要 Go 1.24+ 版本（已满足）
# 2. 使用前请先启动 PostgreSQL 服务或运行 Docker Compose:
#    docker-compose -f docker-compose.postgres.yml up -d postgres
# 3. 首次运行时，GORM 会自动创建所需的数据表
# 4. 生产环境请使用更强的密码和 SSL 连接 (SIAPP_DB_SSLMODE=require)
